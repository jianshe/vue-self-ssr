CSR  →  SPA → SSR

CSR → 客户端渲染 JSP、PHP、.net 
流程：
客户端发送一个请求到服务端 → 服务端查询数据库，拼接html字符串（模版） → 给客户端html响应（里面包含所有的内容），整个过程只请求一次。
优点：
1.CSR 浏览器直接渲染到页面中，对搜索引擎非常友好。
2.首屏速度比较快。

SPA单页面应用程序
请求流程：
客户端先发送一个请求到服务端  → 服务端返回html结构  → 给客户端没有dom结构的html →
前端渲染html、渲染js（如vue.js）、渲染template  → 再次向服务端发送ajax请求获取数据 → 服务端返回json数据 →
客户端拿到数据后，再动态的前端生成页面结构。

缺点：
1.首屏渲染时间比较长。
2.对SEO不友好。

SSR → 是为了解决SPA单页面应用首屏渲染时间长及对seo不友好问题而存在。
定义：
后端渲染出完整的首屏的dom结构返回，前端拿到的内容包括首屏及完整spa结构，应用激活后依然按照spa方式运行。
请求流程:
客户端先发送一个请求到服务端  → 服务端读取Vue模版，解析成dom节点，返回（首屏相关的）html结构（包括spa应用程序整体的其它部分）给客户端 →
客户端拿到返回的html，显示首屏页面，然后激活（vue执行一次挂载）。

优点：
1.首屏渲染速度比较快。
2.对SEO比较友好。
3.消耗流量比较少一些

缺点：
1.开发条件受限制（浏览器特定要指定的代码，必须在mounted这些钩子里面才能执行，开发复杂度增加，第三方库需要特殊处理）。
2.部署环境比较复杂。
3.服务器cpu和内存消耗比较大一些。
